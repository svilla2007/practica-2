#include <iostream>

using namespace std;

void problema1();
void problema2();
void problema3();
void problema4();
void problema5();
void problema6();
void problema7();
void problema8();
void problema9();
void problema10();
void problema11();
void problema12();
void problema13();
void problema14();
void problema15();
void problema16();
void problema17();
void problema18();

int main()
{
    int problemas = 19;

    cout<<"que problema desea ejecutar: ";
    cin>> problemas;

    switch (problemas) {
    case 1:
        problema1();
        break;
    case 2:
        problema2();
        break;
    break;
    case 3:
        problema3();
        break;
    case 4:
        problema4();
        break;
    case 5:
        problema5();
        break;
    case 6:
        problema6();
        break;
    case 7:
        problema7();
    case 8:
        problema8();
        break;
    case 9:
        problema9();
        break;
    case 10:
        problema10();
        break;
    case 11:
        problema11();
        break;
    case 12:
        problema12();
        break;
    case 13:
        problema14();
        break;
    case 14:
        problema15();
        break;
    case 15:
        problema15();
        break;
    case 16:
        problema16();
        break;
    case 17 :
        problema17();
        break;
    case 18:
        problema18();
        break;
    default:
        break;
    }
}
void problema1(){
    int cantidad;

    // Solicitar al usuario la cantidad de dinero
    cout << "Ingrese la cantidad de dinero: ";
    cin >> cantidad;

    // Arreglos con las denominaciones de billetes y monedas
    int denominaciones[] = {50000, 20000, 10000, 5000, 2000, 1000, 500, 200, 100, 50};
    int cantidadBilletesMonedas[10] = {0};  // Para almacenar la cantidad de cada denominacion

    for (int i = 0; i < 10; i++) {
        cantidadBilletesMonedas[i] = cantidad / denominaciones[i];  // Cuántos billetes/monedas de esta denominacion
        cantidad %= denominaciones[i];  // Actualizar el resto de la cantidad
    }

    // Mostrar el resultado
    for (int i = 0; i < 10; i++) {
        cout << denominaciones[i] << ": " << cantidadBilletesMonedas[i] << endl;
    }

    // Si queda un valor faltante, lo mostramos
    if (cantidad > 0) {
        cout << "Faltante: " << cantidad << endl;
    }
}
void problema2(){
    const int nletras = 200;
    char letras[nletras];
    int count[26] = {0};

    for (int i = 0; i < nletras; i++) {
        letras[i] = 'A' + rand() % 26;
        count[letras[i] - 'A']++;
    }

    for (int i = 0; i < nletras; i++) {
        cout << letras[i];
    }
    cout << endl;

    for (int i = 0; i < 26; i++) {
        if (count[i] > 0) {
            cout << char('A' + i) << ": " << count[i] << endl;
        }
    }

}
void problema3(){
    char cadena1[100], cadena2[100];
     bool iguales = true;

     cout << "Introduce la primera cadena: ";
     cin>>cadena1;

     cout << "Introduce la segunda cadena: ";
     cin>>cadena2;

     // Comparar las cadenas
     int i = 0;
     while (cadena1[i] != '\0' || cadena2[i] != '\0') {
         if (cadena1[i] != cadena2[i]) {
             iguales = false; // Si encuentra una diferencia, cambia a falso
             break;
         }
         i++;
     }

     // Verificar si las cadenas son iguales
     if (iguales) {
         cout << "Las cadenas son iguales" << endl;
     } else {
         cout << "Las cadenas son diferentes" << endl;
     }

}
void problema4(){
    string num;
    cout << "Ingresa una cadena de caracteres numericos: ";
    cin >> num;

    int numero = stoi(num);

    cout << "El numero convertido a entero es: " << numero << endl;

}
void problema5(){
    int numero;
    cout << "Ingresa un numero entero: ";
    cin >> numero;

    string result = to_string(numero);

    cout << "El numero convertido a cadena es: " << result << endl;

}
void problema6(){
    string palabra;
    cout << "Ingresa una plabra: ";
    cin>> palabra; 

    for (char &c : palabra) {
        if (c >= 'a' && c <= 'z') {
            c -= 32; // Convierte a mayuscula
        }
    }

    // Mostrar resultados
    cout << "En mayuscula: " << palabra << endl;

}
void problema7(){
    string cadena, resultado = "";

    cout << "Introduce una cadena: ";
    cin >> cadena;

    for (int i = 0; i < cadena.length(); i++) {
        bool repetido = false;
        // Verificar si el carácter ya está en el resultado
        for (int j = 0; j < resultado.length(); j++) {
            if (cadena[i] == resultado[j]) {
                repetido = true;
                break;
            }
        }
        // Si no esta repetido, agregarlo al resultado
        if (!repetido) {
            resultado += cadena[i];
        }
    }

    cout << "Original: " << cadena << endl;
    cout << "Sin repetidos: " << resultado << endl;


}
void problema8(){
    string cadena, Texto = "", Numeros = "";

    cout << "Introduce una cadena: ";
    cin >> cadena;

    // Recorremos la cadena y separamos numeros de letras
    for (int i = 0; i < cadena.length(); i++) {
        if (isdigit(cadena[i])) {
            Numeros += cadena[i];  // Si es un dígito, se agrega a soloNumeros
        } else {
            Texto += cadena[i];    // Si no es un dígito, se agrega a soloTexto
        }
    }

    // Mostrar resultados
    cout << "Original: " << cadena << endl;
    cout << "Texto: " << Texto << ". Numero: " << Numeros << "." << endl;

}
void problema9(){
    int n;
    string cadena;

    cout << "Introduce el numero de cifras que desea separar: ";
    cin >> n;

    cout << "Introduce una cadena de caracteres numericos: ";
    cin >> cadena;

    // Calcular cuántos ceros agregar si la cadena no es divisible por n
    int longitud = cadena.length();
    int faltantes = n - (longitud % n);

    if (faltantes != n) {
        // Agregar ceros a la izquierda
        for (int i = 0; i < faltantes; i++) {
            cadena = '0' + cadena;
        }
    }

    cout << "Original: " << cadena << endl;

    int suma = 0;

    // Iterar sobre la cadena en bloques de n caracteres
    for (int i = 0; i < cadena.length(); i += n) {
        int numero = 0;
        // Convertir bloque de n caracteres a numero
        for (int j = 0; j < n; j++) {
            numero = numero * 10 + (cadena[i + j] - '0');
        }
        suma += numero;  // Sumar el numero
    }

    cout << "Suma: " << suma << endl;

}
void problema10(){
    char numeroRomano[20];
    int total = 0;
    int valorActual = 0;
    int valorSiguiente = 0;

    cout << "Ingresa un numero en sistema romano: ";
    cin >> numeroRomano;

    for (int i = 0; numeroRomano[i] != '\0'; i++) {

        if (numeroRomano[i] == 'M') valorActual = 1000;
        else if (numeroRomano[i] == 'D') valorActual = 500;
        else if (numeroRomano[i] == 'C') valorActual = 100;
        else if (numeroRomano[i] == 'L') valorActual = 50;
        else if (numeroRomano[i] == 'X') valorActual = 10;
        else if (numeroRomano[i] == 'V') valorActual = 5;
        else if (numeroRomano[i] == 'I') valorActual = 1;

        if (numeroRomano[i + 1] == 'M') valorSiguiente = 1000;
        else if (numeroRomano[i + 1] == 'D') valorSiguiente = 500;
        else if (numeroRomano[i + 1] == 'C') valorSiguiente = 100;
        else if (numeroRomano[i + 1] == 'L') valorSiguiente = 50;
        else if (numeroRomano[i + 1] == 'X') valorSiguiente = 10;
        else if (numeroRomano[i + 1] == 'V') valorSiguiente = 5;
        else if (numeroRomano[i + 1] == 'I') valorSiguiente = 1;
        else valorSiguiente = 0;

        if (valorActual < valorSiguiente) {
            total -= valorActual;
        } else {
            total += valorActual;
        }
    }

    cout << "El numero ingresado fue: " << numeroRomano << " Que corresponde a: " << total << endl;

}
void problema11(){
    const int FILAS = 15;
    const int ASIENTOS = 20;
    char sala[FILAS][ASIENTOS];
    char filaLetra;
    int fila, asiento;
    char opcion;

    for (int i = 0; i < FILAS; i++) {
        for (int j = 0; j < ASIENTOS; j++) {
            sala[i][j] = '-';
        }
    }

    do {
        // Mostrar la sala de cine
        cout << "Estado actual de la sala de cine:\n";
        for (int i = 0; i < FILAS; i++) {
            cout << (char)('A' + i) << "\t"; // Mostrar la letra de la fila
            for (int j = 0; j < ASIENTOS; j++) {
                cout << sala[i][j] << "\t";
            }
            cout << endl;
        }

        // Menú de opciones
        cout << "\nElige una opción:\n";
        cout << "1. Reservar un asiento\n";
        cout << "2. Cancelar una reserva\n";
        cout << "3. Salir\n";
        cin >> opcion;

        if (opcion == '1' || opcion == '2') {
            // Solicitar fila y asiento
            cout << "Ingresa la fila (A-O): ";
            cin >> filaLetra;
            fila = filaLetra - 'A';

            cout << "Ingresa el número del asiento (1-20): ";
            cin >> asiento;
            asiento -= 1;

            // Validar si la fila y el asiento son correctos
            if (fila >= 0 && fila < FILAS && asiento >= 0 && asiento < ASIENTOS) {
                if (opcion == '1') {
                    // Reservar un asiento
                    if (sala[fila][asiento] == '-') {
                        sala[fila][asiento] = '+';
                        cout << "Asiento reservado correctamente.\n";
                    } else {
                        cout << "El asiento ya esta reservado.\n";
                    }
                } else if (opcion == '2') {
                    // Cancelar una reserva
                    if (sala[fila][asiento] == '+') {
                        sala[fila][asiento] = '-';
                        cout << "Reserva cancelada correctamente.\n";
                    } else {
                        cout << "El asiento no esta reservado.\n";
                    }
                }
            } else {
                cout << "Fila o número de asiento invalido.\n";
            }
        }

    } while (opcion != '3');

}
void problema12(){}
void problema13(){}
void problema14(){}
void problema15(){}
void problema16(){}
void problema17(){}
void problema18(){}
