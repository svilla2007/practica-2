#include <iostream>

using namespace std;

void problema1();
void problema2();
void problema3();
void problema4();
void problema5();
void problema6();
void problema7();
void problema8();
void problema9();
void problema10();
void problema11();
int problema12();
void problema13();
int problema14();
void problema15();
void imprimirArreglo(int arreglo[]);
int problema16();
long int factorial(int num);
void problema17();
int SumaDeDivisores(int numero);


int main()
{
    int problemas = 19;

    cout<<"que problema desea ejecutar: ";
    cin>> problemas;

    switch (problemas) {
    case 1:
        problema1();
        break;
    case 2:
        problema2();
        break;
        break;
    case 3:
        problema3();
        break;
    case 4:
        problema4();
        break;
    case 5:
        problema5();
        break;
    case 6:
        problema6();
        break;
    case 7:
        problema7();
    case 8:
        problema8();
        break;
    case 9:
        problema9();
        break;
    case 10:
        problema10();
        break;
    case 11:
        problema11();
        break;
    case 12:
        problema12();
        break;
    case 13:
        problema14();
        break;
    case 14:
        problema15();
        break;
    case 15:
        problema15();
        break;
    case 16:
        problema16();
        break;
    case 17 :
        problema17();
        break;
    default:
        break;
    }
}
void problema1(){
    int cantidad;

    cout << "Ingrese la cantidad de dinero: ";
    cin >> cantidad;

    int denominaciones[] = {50000, 20000, 10000, 5000, 2000, 1000, 500, 200, 100, 50};
    int cantidadBilletesMonedas[10] = {0};

    for (int i = 0; i < 10; i++) {
        cantidadBilletesMonedas[i] = cantidad / denominaciones[i];
        cantidad %= denominaciones[i];
    }

    for (int i = 0; i < 10; i++) {
        cout << denominaciones[i] << ": " << cantidadBilletesMonedas[i] << endl;
    }

    if (cantidad > 0) {
        cout << "Faltante: " << cantidad << endl;
    }
}
void problema2(){
    const int nletras = 200;
    char letras[nletras];
    int count[26] = {0};

    for (int i = 0; i < nletras; i++) {
        letras[i] = 'A' + rand() % 26;
        count[letras[i] - 'A']++;
    }

    for (int i = 0; i < nletras; i++) {
        cout << letras[i];
    }
    cout << endl;

    for (int i = 0; i < 26; i++) {
        if (count[i] > 0) {
            cout << char('A' + i) << ": " << count[i] << endl;
        }
    }

}
void problema3(){
    char cadena1[100], cadena2[100];
    bool iguales = true;

    cout << "Introduce la primera cadena: ";
    cin>>cadena1;

    cout << "Introduce la segunda cadena: ";
    cin>>cadena2;

    int i = 0;
    while (cadena1[i] != '\0' || cadena2[i] != '\0') {
        if (cadena1[i] != cadena2[i]) {
            iguales = false;
            break;
        }
        i++;
    }

    if (iguales) {
        cout << "Las cadenas son iguales" << endl;
    } else {
        cout << "Las cadenas son diferentes" << endl;
    }

}
void problema4(){
    string num;
    cout << "Ingresa una cadena de caracteres numéricos: ";
    cin >> num;

    int numero = stoi(num);

    cout << "El número convertido a entero es: " << numero << endl;

}
void problema5(){
    int number;
    cout << "Ingresa un número entero: ";
    cin >> number;

    string result = to_string(number);

    cout << "El número convertido a cadena es: " << result << endl;

}
void problema6(){
    string palabra;
    cout << "Ingresa una plabra: ";
    cin>> palabra;

    for (char &c : palabra) {
        if (c >= 'a' && c <= 'z') {
            c -= 32;
        }
    }
    cout << "En mayúscula: " << palabra << endl;

}
void problema7(){
    string cadena, resultado = "";

    cout << "Introduce una cadena: ";
    cin >> cadena;

    for (int i = 0; i < cadena.length(); i++) {
        bool repetido = false;
        for (int j = 0; j < resultado.length(); j++) {
            if (cadena[i] == resultado[j]) {
                repetido = true;
                break;
            }
        }
        if (!repetido) {
            resultado += cadena[i];
        }
    }

    cout << "Original: " << cadena << endl;
    cout << "Sin repetidos: " << resultado << endl;


}
void problema8(){
    string cadena, Texto = "", Numeros = "";

    cout << "Introduce una cadena: ";
    cin >> cadena;

    for (int i = 0; i < cadena.length(); i++) {
        if (isdigit(cadena[i])) {
            Numeros += cadena[i];
        } else {
            Texto += cadena[i];
        }
    }

    cout << "Original: " << cadena << endl;
    cout << "Texto: " << Texto << ". Numero: " << Numeros << "." << endl;

}
void problema9(){
    int n;
    string cadena;

    cout << "Introduce el numero de cifras que desea separar: ";
    cin >> n;

    cout << "Introduce una cadena de caracteres numéricos: ";
    cin >> cadena;
    int longitud = cadena.length();
    int faltantes = n - (longitud % n);

    if (faltantes != n) {
        for (int i = 0; i < faltantes; i++) {
            cadena = '0' + cadena;
        }
    }

    cout << "Original: " << cadena << endl;

    int suma = 0;

    for (int i = 0; i < cadena.length(); i += n) {
        int numero = 0;
        for (int j = 0; j < n; j++) {
            numero = numero * 10 + (cadena[i + j] - '0');
        }
        suma += numero;
    }

    cout << "Suma: " << suma << endl;

}
void problema10(){
    char numeroRomano[20];
    int total = 0;
    int valorActual = 0;
    int valorSiguiente = 0;

    cout << "Ingresa un numero en sistema romano: ";
    cin >> numeroRomano;

    for (int i = 0; numeroRomano[i] != '\0'; i++) {

        if (numeroRomano[i] == 'M') valorActual = 1000;
        else if (numeroRomano[i] == 'D') valorActual = 500;
        else if (numeroRomano[i] == 'C') valorActual = 100;
        else if (numeroRomano[i] == 'L') valorActual = 50;
        else if (numeroRomano[i] == 'X') valorActual = 10;
        else if (numeroRomano[i] == 'V') valorActual = 5;
        else if (numeroRomano[i] == 'I') valorActual = 1;

        if (numeroRomano[i + 1] == 'M') valorSiguiente = 1000;
        else if (numeroRomano[i + 1] == 'D') valorSiguiente = 500;
        else if (numeroRomano[i + 1] == 'C') valorSiguiente = 100;
        else if (numeroRomano[i + 1] == 'L') valorSiguiente = 50;
        else if (numeroRomano[i + 1] == 'X') valorSiguiente = 10;
        else if (numeroRomano[i + 1] == 'V') valorSiguiente = 5;
        else if (numeroRomano[i + 1] == 'I') valorSiguiente = 1;
        else valorSiguiente = 0;

        if (valorActual < valorSiguiente) {
            total -= valorActual;
        } else {
            total += valorActual;
        }
    }

    cout << "El numero ingresado fue: " << numeroRomano << " Que corresponde a: " << total << endl;

}
void problema11(){
    const int FILAS = 15;
    const int ASIENTOS = 20;
    char sala[FILAS][ASIENTOS];
    char filaLetra;
    int fila, asiento;
    char opcion;

    for (int i = 0; i < FILAS; i++) {
        for (int j = 0; j < ASIENTOS; j++) {
            sala[i][j] = '-';
        }
    }

    do {
        cout << "Estado actual de la sala de cine:\n";
        for (int i = 0; i < FILAS; i++) {
            cout << (char)('A' + i) << "\t";
            for (int j = 0; j < ASIENTOS; j++) {
                cout << sala[i][j] << "\t";
            }
            cout << endl;
        }

        cout << "\nElige una opcion:\n";
        cout << "1. Reservar un asiento\n";
        cout << "2. Cancelar una reserva\n";
        cout << "3. Salir\n";
        cin >> opcion;

        if (opcion == '1' || opcion == '2') {
            cout << "Ingresa la fila (A-O): ";
            cin >> filaLetra;
            fila = filaLetra - 'A';

            cout << "Ingresa el número del asiento (1-20): ";
            cin >> asiento;
            asiento -= 1;

            if (fila >= 0 && fila < FILAS && asiento >= 0 && asiento < ASIENTOS) {
                if (opcion == '1') {
                    if (sala[fila][asiento] == '-') {
                        sala[fila][asiento] = '+';
                        cout << "Asiento reservado correctamente.\n";
                    } else {
                        cout << "El asiento ya está reservado.\n";
                    }
                } else if (opcion == '2') {
                    if (sala[fila][asiento] == '+') {
                        sala[fila][asiento] = '-';
                        cout << "Reserva cancelada correctamente.\n";
                    } else {
                        cout << "El asiento no está reservado.\n";
                    }
                }
            } else {
                cout << "Fila o número de asiento inválido.\n";
            }
        }

    } while (opcion != '3');

}
int problema12() {
    int tamano = 0;
    cout << "Ingrese el tamano de la matriz cuadrada: ";
    cin >> tamano;

    int matriz[tamano][tamano];

    for (int i = 0; i < tamano; i++) {
        for (int j = 0; j < tamano; j++) {
            cout << "Ingrese el valor de la posicion: "<<i<<" "<<j<<endl;
            cin >> matriz[i][j];
        }
    }


    cout << "Matriz ingresada:" << endl;
    for (int i = 0; i < tamano; i++) {
        for (int j = 0; j < tamano; j++) {
            cout << matriz[i][j] << " ";
        }
        cout << endl;
    }

    int suma_magica = 0;
    for (int j = 0; j < tamano; j++) {
        suma_magica += matriz[0][j];
    }

    for (int i = 1; i < tamano; i++) {
        int suma_fila = 0;
        for (int j = 0; j < tamano; j++) {
            suma_fila += matriz[i][j];
        }
        if (suma_fila != suma_magica) {
            cout << "La matriz no es un cuadrado magico." << endl;
            return 0;
        }
    }

    for (int j = 0; j < tamano; j++) {
        int suma_columna = 0;
        for (int i = 0; i < tamano; i++) {
            suma_columna += matriz[i][j];
        }
        if (suma_columna != suma_magica) {
            cout << "La matriz no es un cuadrado magico." << endl;
            return 0;
        }
    }

    int suma_diagonal1 = 0;
    for (int i = 0; i < tamano; i++) {
        suma_diagonal1 += matriz[i][i];
    }
    if (suma_diagonal1 != suma_magica) {
        cout << "La matriz no es un cuadrado magico." << endl;
        return 0;
    }

    int suma_diagonal2 = 0;
    for (int i = 0; i < tamano; i++) {
        suma_diagonal2 += matriz[i][tamano - i - 1];
    }
    if (suma_diagonal2 != suma_magica) {
        cout << "La matriz no es un cuadrado magico." << endl;
        return 0;
    }

    cout << "La matriz es un cuadrado magico" << endl;
    return 0;
}




void problema13() {
    int galaxia[6][8] = {{0, 3, 4, 0, 0, 0, 6, 8},
                         {5, 13, 6, 0, 0, 0, 2, 3},
                         {2, 6, 2, 7, 3, 0, 10, 0},
                         {0, 0, 4, 15, 4, 1, 6, 0},
                         {0, 0, 7, 12, 6, 9, 10, 4},
                         {5, 0, 6, 10, 6, 4, 8, 0}};

    int numeroestrellas = 0;
    float suma = 0, promedio = 0;

    for (int i = 1; i < 5; i++) {
        for (int j = 1; j < 7; j++) {
            suma = galaxia[i][j] + galaxia[i][j-1] + galaxia[i][j+1] +
                   galaxia[i-1][j] + galaxia[i+1][j];

            promedio = suma / 5.0;

            if (promedio > 6) {
                numeroestrellas++;
            }
        }
    }
    cout << "El número de estrellas es: " << numeroestrellas << endl;
}


int problema14(){
    int matriz[5][5];
    int numeros=1;
    cout<<"La matriz es: "<<endl;
    for (int fila=0;fila<5;fila++){
        for (int columna=0;columna<5;columna++){
            matriz[fila][columna]=numeros;
            numeros++;
            cout<<matriz[fila][columna]<<" ";
        }
        cout<<endl;
    }

    int matriz90[5][5];
    int numeros90 = 1;

    for (int columna90 = 4; columna90 >= 0; columna90--) {
        for (int fila90 = 0; fila90 < 5; fila90++) {
            matriz90[fila90][columna90] = numeros90;
            numeros90++;
        }
    }

    cout << "Matriz rotada 90 grados:" << endl;
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            cout << matriz90[i][j] << " ";
        }
        cout << endl;
    }
    int matriz180[5][5];
    int numeros180=1;
    for (int fila180 = 4; fila180 >=0; fila180--) {
        for (int columna180 = 4; columna180>=0; columna180--) {
            matriz180[fila180][columna180] = numeros180;
            numeros180++;
        }
    }
    cout<<"Matriz rotada en 180 grados: "<<endl;
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            cout << matriz180[i][j] << " ";
        }
        cout << endl;
    }
    int matriz270[5][5];
    int numeros270=1;
    for (int columna270 = 0; columna270 <5; columna270++) {
        for (int fila270 = 4; fila270>=0; fila270--) {
            matriz270[fila270][columna270] = numeros270;
            numeros270++;
        }
    }
    cout<<"Matriz rotada en 270 grados: "<<endl;
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            cout << matriz270[i][j] << " ";
        }
        cout << endl;
    }
    return 0;
}

void imprimirArreglo(int arreglo[]) {
    for (int i = 0; i < 4; i++) {
        if (i == 3) {
            cout << arreglo[i];
        } else {
            cout << arreglo[i] << ", ";
        }
    }
}

void problema15() {
    int arreglo1[4] = {0, 0, 8, 4};
    int arreglo2[4] = {5, 2, 6, 7};
    int interseccion[4] = {0, 0, 0, 0};
    int x = 0, y = 1, w = 2, h = 3;

    cout << "El arreglo 1 es: {";
    imprimirArreglo(arreglo1);
    cout << "}" << endl;

    cout << "El arreglo 2 es: {";
    imprimirArreglo(arreglo2);
    cout << "}" << endl;

    if (arreglo1[x] == arreglo2[x] && (arreglo1[x] + arreglo1[w] == arreglo2[x] + arreglo2[w])) {
        if (arreglo1[y] == arreglo2[y] && (arreglo1[y] + arreglo1[h] == arreglo2[y] + arreglo2[h])) {
            interseccion[x] = arreglo1[x];
            interseccion[y] = arreglo1[y];
            interseccion[w] = arreglo1[w];
            interseccion[h] = arreglo1[h];
            cout << "Las figuras son iguales" << endl;
        }
    } else {
        if ((arreglo1[x] >= arreglo2[x])) {
            interseccion[x] = arreglo1[x];

            if ((arreglo2[x] + arreglo2[w]) <= arreglo1[x]) {
                cout << "La interseccion no existe" << endl;

            } else if (arreglo1[x] + arreglo1[w] <= arreglo2[x] + arreglo2[w]) {
                interseccion[w] = arreglo1[x] + arreglo1[w] - interseccion[x];

            } else {
                interseccion[w] = arreglo2[x] + arreglo2[w] - interseccion[x];
            }

        } else {
            interseccion[x] = arreglo2[x];
            if ((arreglo1[x] + arreglo1[w]) <= arreglo2[x]) {
                cout << "La intersección no existe" << endl;
            } else if (arreglo2[x] + arreglo2[w] <= arreglo1[x] + arreglo1[w]) {
                interseccion[w] = arreglo2[x] + arreglo2[w] - interseccion[x];
            } else {
                interseccion[w] = arreglo1[x] + arreglo1[w] - interseccion[x];
            }
        }

        if ((arreglo1[y] >= arreglo2[y])) {
            interseccion[y] = arreglo2[y];
            if ((arreglo1[y] + arreglo1[h]) <= arreglo2[y]) {
                cout << "La intersección no existe" << endl;

            } else if ((arreglo1[y] + arreglo1[h]) >= (arreglo2[y] + arreglo2[h])) {
                interseccion[h] = arreglo2[y] + arreglo2[h] - interseccion[y];

            } else {
                interseccion[h] = arreglo1[y] + arreglo1[h] - interseccion[y];
            }

        } else {
            interseccion[y] = arreglo1[y];

            if ((arreglo2[y] + arreglo2[h]) <= arreglo1[y]) {
                cout << "La intersección no existe" << endl;

            } else if ((arreglo2[y] + arreglo2[h]) >= (arreglo1[y] + arreglo1[h])) {
                interseccion[h] = arreglo1[y] + arreglo1[h] - interseccion[y];

            } else {
                interseccion[h] = arreglo2[y] + arreglo2[h] - interseccion[y];
            }
        }
    }

    cout << "El arreglo de la intersección es: {";
    imprimirArreglo(interseccion);
    cout << "}" << endl;
}

long int factorial(int num) {
    long int resultado = 1;
    for (int i = 1; i <= num; i++) {
        resultado *= i;
    }
    return resultado;
}
int problema16(){
    int numero;
    cout<<"Escriba el numero n para determinar la cantidad de caminos posibles: "<<endl;
    cin>> numero;
    long long int resultado=factorial(2*numero)/(factorial(numero)*factorial(numero));
    cout<<"El resultado es: "<<resultado<<endl;
    return 0;
}

int SumaDeDivisores(int numero) {
    int suma = 0;
    for (int i = 1; i <= numero / 2; i++) {
        if (numero % i == 0) {
            suma += i;
        }
    }
    return suma;
}

void problema17() {
    int limite, numero2, suma_numeros_amigos = 0, suma_divisores_num2;
    cout << "Ingrese un numero limite: ";
    cin >> limite;

    for (int numero1 = 220; numero1 < limite; numero1++) {
        numero2 = SumaDeDivisores(numero1);
        suma_divisores_num2 = SumaDeDivisores(numero2);
        if (suma_divisores_num2 == numero1 && numero1 != numero2) {
            suma_numeros_amigos += numero1;
        }
    }

    if (suma_numeros_amigos == 0) {
        cout << "No hay numeros amigos menores al numero ingresado" << endl;
    } else {
        cout << "La suma de los numeros amigos menores que " << limite << " es " << suma_numeros_amigos << endl;
    }
}

